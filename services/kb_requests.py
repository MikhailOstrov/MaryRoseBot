import httpx

from config import logger

async def telegram_auth(email: str, chat_id: int):

    url = "https://maryrose.by/auth/telegram-auth"
    async with httpx.AsyncClient() as client:
        response = await client.post(
            url, json={"email": email, "chat_id": chat_id}, timeout=30.0
        )
        response.raise_for_status()
    logger.info(f"–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏ —É—Å–ø–µ—à–Ω–∞")

async def save_info_in_kb(text: str, chat_id: int):
    url = "https://maryrose.by/knowledge/add-text"
    try:
        async with httpx.AsyncClient() as client:
                response = await client.post(
                    url, json={"text": text, "chat_id": chat_id}, timeout=30.0
                )
                response.raise_for_status()
                logger.info("–¢–µ–∫—Å—Ç —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –ë–ó.")
                return "–¢–µ–∫—Å—Ç —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –ë–ó."
    except Exception as e:
        logger.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        return "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–∞. –ò—Å–ø—Ä–∞–≤–∏–º –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è, –∞ –ø–æ–∫–∞, —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ —Ç–µ–∫—Å—Ç –≥–¥–µ-–Ω–∏–±—É–¥—å!"

async def get_info_from_kb(query: str, chat_id: int):
    url = "https://maryrose.by/knowledge/search"
    try:
        async with httpx.AsyncClient() as client:
            response = await client.post(
                url, json={"query": query, "chat_id": chat_id}, timeout=30.0
            )
            response.raise_for_status()
            result = response.json()
        
        logger.info(f"–û—Ç–≤–µ—Ç –æ—Ç –ë–ó: {result}")

        if not result.get("success") or not result.get("results"):
            return None
        
        results = result["results"]
        
        message_parts = [
            f"üìå --- {idx}. {r['title']} ---\n   {r['content_preview']}\n"
            for idx, r in enumerate(results, start=1)
        ]
        return "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞:\n\n" + "\n".join(message_parts).strip()

    except Exception as e:
         return "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ò—Å–ø—Ä–∞–≤–∏–º –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è!"