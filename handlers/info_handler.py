from aiogram import Router, types
from aiogram.filters import Command
from states.bot_states import UserAuthStatus
router = Router()

# Хэндлер вызова дополнительной инструкции для пользователя
@router.message(Command("info"))
async def handle_info_command(message: types.Message):
    await message.answer('''
--- Инструкция для лучшего качества пользования ---
                         
Есть несколько паттернов использования:
                         
1. Стандартное добавление информации: Вы отправляете или пересылаете текст, аудиозапись или голосовое сообщение -- Мэри добавляет в вашу базу знаний.
                         
2. Добавление информации в напоминания: Вы также отправляете любой тип сообщений, однако явно говорите о том, что Вас ждет встреча, созвон или любое другое мероприятие, которое Вам нельзя пропустить. Важно четко говорить о своем намерении, например: "Завтра важна встерча с ...". Так Вас легче понять.
                         
3. Поиск информации: Вы аналогично отправляете любое сообщение, а Мэри ищет его. Всё банально просто. Однако, постарайтесь чётко формулировать то, что Вам нужно найти. Использование ключевых объектов поиска лучшего всего скажется на результате.
               
Для вашего удобства, Мэри будет напоминать Вам о запланированном мероприятии за день до него, а также, при четко указанном времени встречи, дополнительно напомнит за 2 часа до него.                     
''')